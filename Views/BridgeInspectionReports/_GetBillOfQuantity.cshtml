@using ERA_BMS.Models
@using ERA_BMS.ViewModels


<div class="panel panel-primary">
    <div class="panel-heading">
        <h3 class="panel-title panel-info">Bill of Quantity - BOQ (District: <b>@ViewBag.District</b>, Section: <b>@ViewBag.Section</b>, Road Segment: <b>@ViewBag.Segment</b>, Bridge: <b>@ViewBag.BridgeName</b>, Inspection Year: <b>@ViewBag.InspectionYear</b>@*, Inspection Date: <b>@ViewBag.InspectionDate.ToString("dd/MM/yyyy")</b>*@)</h3>
    </div>

    <div class="panel-body">
        <br />
        <table class="table table-striped table-condensed table-responsive table-bordered display compact hover" id="tblbillofquantity">
            <thead>
                @*<tr><th  align="center">BILL OF QUANTITY - BOQ</th></tr>*@
                <tr>
                    <th>Structure Items</th>
                    <th>Damage Type</th>
                    <th>Unit</th>
                    <th>Qty</th>
                    <th>Unit Repair Cost</th>
                    <th>Total Repair Cost</th>
                </tr>
            </thead>
            <tbody>

                @{
                    var subStrCost = 0.0;
                }
                @for (int i = 0; i < ViewBag.Substructure.Count; i++)
                {
                    var strItemCost = 0.0;

                    for (int j = 0; j < ViewBag.Substructure[i].Count; j++)
                    {
                        <tr>
                            <td>
                                @{ var strItemName = "";
                                    if (j == 0)
                                    {
                                        strItemName = ViewBag.Substructure[i][j].DamageType.StructureItemId + " " + ViewBag.Substructure[i][j].DamageType.StructureItem.StructureItemName;
                                    }
                                }
                                <b>@strItemName</b>
                            </td>
                            <td>
                                @ViewBag.Substructure[i][j].DamageType.DamageTypeName
                            </td>
                            <td>
                                @{ var index = ViewBag.Substructure[i][j].DamageTypeId;
                                }
                                @ViewBag.DamageRateSubstructure[i][index - 1].Unit
                            </td>
                            <td>
                                @{ var dmgArea = ViewBag.Substructure[i][j].DamageArea;
                                }
                                @dmgArea.ToString("0.00")  @*format it to two decimal places*@
                            </td>
                            <td>
                                @ViewBag.DamageRateSubstructure[i][index - 1].UnitRepairCost.ToString("#,0.00")
                            </td>
                            <td>
                                @{ var cost = ViewBag.DamageRateSubstructure[i][index - 1].UnitRepairCost * ViewBag.Substructure[i][j].DamageArea;
                                    strItemCost += cost;
                                }
                                @cost.ToString("#,0.00")
                            </td>
                        </tr>
                    }
                    // If cost of structure item is zero, skip the entire row
                    if (strItemCost != 0)
                    {
                        <tr>
                            <td ></td>
                            <td><b>@strItemCost.ToString("#,0.00")</b></td>
                            @{
                                subStrCost += strItemCost;
                            }
                            @*<td></td><td></td><td></td><td></td>*@
                            <td colspan="4"></td>
                        </tr>
                    }
                }
                @*</tbody>

        <tbody>*@

                @{
                    var superStrCost = 0.0;
                }
                @for (int i = 0; i < ViewBag.Superstructure.Count; i++)
                {
                    var strItemCost = 0.0;

                    for (int j = 0; j < ViewBag.Superstructure[i].Count; j++)
                    {
                        <tr>
                            <td>
                                @{ var strItemName = "";
                                    if (j == 0)
                                    {
                                        strItemName = ViewBag.Superstructure[i][j].DamageType.StructureItemId + " " + ViewBag.Superstructure[i][j].DamageType.StructureItem.StructureItemName;
                                    }
                                }
                                <b>@strItemName</b>
                            </td>
                            <td>
                                @ViewBag.Superstructure[i][j].DamageType.DamageTypeName
                            </td>
                            <td>
                                @{ var index = ViewBag.Superstructure[i][j].DamageTypeId;
                                }
                                @ViewBag.DamageRateSuperstructure[i][index - 1].Unit
                            </td>
                            <td>
                                @{ var dmgArea = ViewBag.Superstructure[i][j].DamageArea;
                                }
                                @dmgArea.ToString("0.00")  @*format it to two decimal places*@
                            </td>
                            <td>
                                @ViewBag.DamageRateSuperstructure[i][index - 1].UnitRepairCost.ToString("#,0.00")
                            </td>
                            <td>
                                @{ var cost = ViewBag.DamageRateSuperstructure[i][index - 1].UnitRepairCost * ViewBag.Superstructure[i][j].DamageArea;
                                    strItemCost += cost;
                                }
                                @cost.ToString("#,0.00")
                            </td>
                        </tr>
                    }
                    // If cost of structure item is zero, skip the entire row
                    if (strItemCost != 0)
                    {
                        <tr>
                            <td></td>
                            <td><b>@strItemCost.ToString("#,0.00")</b></td>
                            @{
                                superStrCost += strItemCost;
                            }
                            <td></td><td></td><td></td><td></td>
                            @*<td colspan="4"></td>*@
                        </tr>
                    }
                }
                @*</tbody>

        <tbody>*@

                @{
                    var ancillariesCost = 0.0;
                }
                @for (int i = 0; i < ViewBag.Ancillaries.Count; i++)
                {
                    var strItemCost = 0.0;

                    for (int j = 0; j < ViewBag.Ancillaries[i].Count; j++)
                    {
                        <tr>
                            <td>
                                @{ var strItemName = "";
                                    if (j == 0)
                                    {
                                        strItemName = ViewBag.Ancillaries[i][j].DamageType.StructureItemId + " " + ViewBag.Ancillaries[i][j].DamageType.StructureItem.StructureItemName;
                                    }
                                }
                                <b>@strItemName</b>
                            </td>
                            <td>
                                @ViewBag.Ancillaries[i][j].DamageType.DamageTypeName
                            </td>
                            <td>
                                @{ var index = ViewBag.Ancillaries[i][j].DamageTypeId;
                                }
                                @ViewBag.DamageRateAncillaries[i][index - 1].Unit
                            </td>
                            <td>
                                @{ var dmgArea = ViewBag.Ancillaries[i][j].DamageArea;
                                }
                                @dmgArea.ToString("0.00")  @*format it to two decimal places*@
                            </td>
                            <td>
                                @ViewBag.DamageRateAncillaries[i][index - 1].UnitRepairCost.ToString("#,0.00")
                            </td>
                            <td>
                                @{ var cost = ViewBag.DamageRateAncillaries[i][index - 1].UnitRepairCost * ViewBag.Ancillaries[i][j].DamageArea;
                                    strItemCost += cost;
                                }
                                @cost.ToString("#,0.00")
                            </td>

                        </tr>
                    }
                    // If cost of structure item is zero, skip the entire row
                    if (strItemCost != 0)
                    {
                        <tr>
                            <td ></td>
                            <td><b>@strItemCost.ToString("#,0.00")</b></td>
                            @{
                                ancillariesCost += strItemCost;
                            }
                            <td></td><td></td><td></td><td></td>
                            @*<td colspan="4"></td>*@
                        </tr>
                    }
                }

                <tr>
                    <td class="panel-title" align="right"><b>Total Bridge Repair Cost for <i>@ViewBag.BridgeName</i></b></td>
                    @{
                        double bridgeCost = subStrCost + superStrCost + ancillariesCost;
                    }

                    <td class="panel-title"><b>@bridgeCost.ToString("#,0.00")</b></td>
                    <td></td><td></td><td></td><td></td>
                    @*<td colspan="4"></td>*@
                </tr>
            </tbody>

        </table>
    </div>
    <div class="panel-footer">
        <h5>Bill of Quantity (BOQ) for Bridge Repair</h5>
    </div>
</div>



<script>
    $(document).ready(function () {
        

        $('#tblbillofquantity').dataTable({
            paging: true,
            pageLength: 15,
            bLengthChange: true,
            scrollY: 400,
            
            searching: true,
            select: true,
            dom: 'lBfrtip',
            //buttons: ['copy', 'excel', 'pdf', 'print']
            buttons: [
                { extend: 'copy', className: 'btn btn-sm btn-primary' },
                { extend: 'excel', className: 'btn btn-sm btn-primary', text: 'Export Excel' },
                { extend: 'pdf', className: 'btn btn-sm btn-primary', text: 'Export PDF' },
                { extend: 'print', className: 'btn btn-sm btn-primary' }
            ]
        });
    });
</script>

