@model ERA_BMS.Models.Culvert

@{
    ViewBag.Title = "New Culvert Registration";
}

<h2>New Culvert Registration</h2>

@using (Html.BeginForm())
{
    <hr />
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="row">
            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @*Holds a unique culvert id*@
                @Html.HiddenFor(model => model.CulvertId)

                <div class="form-group form-group-sm required">
                    <label class="control-label col-md-3">District</label>
                    <div class="col-md-8">
                        @*@Html.DropDownList("DistrictId", new SelectList(ViewBag.Districts, "Value", "Text"), new { @class = "form-control" })*@
                        @Html.DropDownList("DistrictId", new SelectList(ViewBag.Districts, "Value", "Text", ViewBag.DistrictId), htmlAttributes: new { @class = "form-control" })
                        <!--<div id="distrIdDIV" style="font-weight: bolder">--> <!-- District Id --> <!--</div>-->
                    </div>
                </div>

                <div class="form-group form-group-sm required">
                    <label class="control-label col-md-3">Section</label>
                    <div class="col-md-8">
                        @*@Html.DropDownList("SectionId", new SelectList(ViewBag.Sections, "Value", "Text"), htmlAttributes: new { @class = "form-control" })*@
                        @Html.DropDownList("SectionId", new SelectList(ViewBag.Sections, "Value", "Text", ViewBag.SectionId), htmlAttributes: new { @class = "form-control" })
                        <!--<div id="secIdDIV" style="font-weight: bolder">--> <!-- Section Id --> <!--</div>-->
                    </div>
                </div>

                <div class="form-group form-group-sm required">
                    @Html.LabelFor(model => model.SegmentId, null, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-8">
                        @*@Html.DropDownList("SegmentId", new SelectList(ViewBag.Segments, "Value", "Text"), htmlAttributes: new { @class = "form-control" })*@
                        @Html.DropDownList("SegmentId", new SelectList(ViewBag.Segments, "Value", "Text", ViewBag.SegmentId), htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SegmentId, "", new { @class = "text-danger" })
                        <!--<div id="segIdDIV" style="font-weight: bolder">--> <!-- Segment Id --> <!--</div>-->
                    </div>
                </div>
            </div>

            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6">
                <div class="form-group form-group-sm required">
                    <label class="control-label col-md-3">Main Route</label>
                    <div class="col-md-8">
                        @Html.DropDownList("MainRouteId", new SelectList(ViewBag.MainRoutes, "Value", "Text"), new { @class = "form-control" })
                        <!--<div id="mainRtIdDIV" style="font-weight: bolder">--> <!-- Main Route Id --> <!--</div>-->
                    </div>
                </div>

                <div class="form-group form-group-sm required">
                    @Html.LabelFor(model => model.SubRouteId, null, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-8">
                        @Html.DropDownList("SubRouteId", new SelectList(ViewBag.SubRoutes, "Value", "Text"), htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SubRouteId, "", new { @class = "text-danger" })
                        <!--<div id="subRtIdDIV" style="font-weight: bolder">--> <!-- Sub Route Id --> <!--</div>-->
                    </div>
                </div>

                <div class="form-group form-group-sm required">
                    @Html.LabelFor(model => model.CulvertNo, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.CulvertNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CulvertNo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group form-group-sm required">
                    @Html.LabelFor(model => model.RevisedCulvertNo, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.RevisedCulvertNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.RevisedCulvertNo, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group form-group-sm">
            <div class="col-md-offset-2 col-md-8">
                <button type="submit" class="btn btn-primary" id="save"><span class="glyphicon glyphicon-save"></span> Save</button>
                <button type="reset" class="btn btn-primary"><span class="glyphicon glyphicon-refresh"></span> Reset</button>
                <div id="status" class="text-danger">
                    <!-- Save failure status text appears here-->
                </div>
            </div>
        </div>
    </div>
}

<div>
    @*
        If the page is opened with some Road segment id value (e.g. https://localhost:44387/Culverts/New/10001),
        then the segment id (i.e. 10001) will be appended to "Go to Culverts List" link
    *@
    <a href="@Url.Action("Index", new { id = (ViewContext.RouteData.Values["id"]) })" class="btn btn-primary" id="gotoculvertlist"><span class="glyphicon glyphicon-backward"></span> Go to Culverts List</a>
</div>

<script>
    $(document).ready(function () {
        $('#SubRouteId option').remove(); //empty the sub route dropdown list
        $('#CulvertNo').attr("placeholder", "Suggested here"); // suggest a culvert no

        // Assign a bridge id which is a raondom GUID value
        $.ajax({
            url: '@Url.Action("LastCulvertId", "Culverts")',
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                $.each(data, function (i, item) {
                    $('#CulvertId').val(item.CulvertId); // set the culvert id
                });
            },
        });

        $('#DistrictId').change(function () {
            var selDistrictId = $('#DistrictId option:selected').val();
            $('#SectionId option').remove(); //empty the section dropdown list
            $('#SegmentId option').remove(); //empty the segment dropdown list
            $('#CulvertNo').val("");  //clear the suggested culvert no
            $('#CulvertNo').attr("placeholder", "Suggested here");

            if (selDistrictId != "0") //if some district is selected
            {
                $('#segmentsPartial').empty(); //empty the segment table

                $.ajax({
                    url: '@Url.Action("_GetSections", "LocationsDDL")',
                    data: { districtid: selDistrictId },
                    type: 'GET',
                    dataType: 'json',
                    success: function (data) {
                        var markup = '<option value="0" id="noselect"> --Select Section --</option>';
                        $.each(data, function (i, section) {
                            markup += '<option value="' + section.Value + '">' + section.Text + '</option>'
                            $('#SectionId').html(markup);
                        });
                    }
                });
            }
        });

        $('#SectionId').change(function () {
            var selSectionId = $('#SectionId option:selected').val();
            $('#SegmentId option').remove(); //empty the segment dropdown list
            $('#CulvertNo').val("");  //clear the suggested culvert no
            $('#CulvertNo').attr("placeholder", "Suggested here");

            if (selSectionId != "0") //if some section is selected
            {
                $.ajax({
                    url: '@Url.Action("_GetSegments", "LocationsDDL")',
                    data: { sectionid: selSectionId },
                    type: 'GET',
                    dataType: 'json',
                    success: function (data) {
                        var markup = '<option value="0" id="noselect"> --Select Segment --</option>';
                        $.each(data, function (i, segment) {
                            markup += '<option value="' + segment.Value + '">' + segment.Text + '</option>'
                            $('#SegmentId').html(markup);
                        });
                    }
                });
            }
        });

        $('#SegmentId').change(function () {
            var selSegmentId = $('#SegmentId option:selected').val();

            if (selSegmentId != "0") //if some road segment is selected
            {
                // append id of the current road segment to the 'Register New Culvert' link
                var updatedLink = "@Url.Action("Index")" + "/" + selSegmentId;
                $('#gotoculvertlist').attr("href", updatedLink)
            }
            else
            {
                $('#gotoculvertlist').attr("href", "@Url.Action("Index")");
            }
        });

        $('#MainRouteId').change(function () {
            var selMainRouteId = $('#MainRouteId option:selected').val();
            $('#SubRouteId option').remove(); //empty the sub route dropdown list
            $('#CulvertNo').val("");  //clear the suggested culvert no
            $('#CulvertNo').attr("placeholder", "Suggested here");

            if (selMainRouteId != "0") //if some main route is selected
            {
                $.ajax({
                    url: '@Url.Action("_GetSubRoutes", "LocationsDDL")',
                    data: { mainrouteid: selMainRouteId },
                    type: 'GET',
                    dataType: 'json',
                    success: function (data) {
                        var markup = '<option value="0" id="noselect"> --Select Subroute--</option>';
                        $.each(data, function (i, subroute) {
                            markup += '<option value="' + subroute.Value + '">' + subroute.Text + '</option>'
                            $('#SubRouteId').html(markup);
                        });
                    }
                });
            }
        });

        $('#SubRouteId').change(function () {
            var selSubRouteId = $('#SubRouteId option:selected').val();
            $('#CulvertNo').val("");  //clear the suggested culvert no
            $('#CulvertNo').attr("placeholder", "Suggested here");

            if (selSubRouteId != "0") //if some sub route is selected
            {
                $.ajax({
                    url: '@Url.Action("LastCulvertNo", "Culverts")',
                    data: { subrouteid: selSubRouteId },
                    type: 'GET',
                    dataType: 'json',
                    success: function (data) {
                        $.each(data, function (i, item) {
                            $('#CulvertNo').val(item.CulvertNo); // suggest a culvert no
                        });
                    },
                });
            }
        });

        $('#save').click(function () {
            var selSegmentId = $('#SegmentId').val();
            var selSubRouteId = $('#SubRouteId').val();

            // if no road segment or sub route is selected, cancel submission and show error status
            if (selSegmentId == 0 || selSubRouteId == 0
                || (typeof selSegmentId == 'undefined') || (typeof selSubRouteId == 'undefined')
                || selSegmentId == null || selSubRouteId == null) {
                $('#status').text("Please enter/select all boxes marked with *")
                return false;
            }
        });
    });
</script>
