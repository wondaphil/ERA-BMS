@model IEnumerable<ERA_BMS.Models.Segment>

<hr />
<div class="panel panel-primary">
    <div class="panel-heading">
        <h3 class="panel-title panel-info">List of Segments</h3>
    </div>
    <div class="panel-body">
        <table class="table table-striped table-condensed table-responsive table-bordered display compact hover" id="tblSegments">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Section.District)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Section)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.RevisedRoadId)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.RevisedRoadId)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.SegmentName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Length)
                    </th>
                    <th>
                        No. of Bridges
                    </th>
                    <th>
                        No. of Culverts
                    </th>
                    <th>Road Map</th>
                </tr>
            </thead>

            <tbody>
                @{ 
                    double totalRoadLength = 0.0;
                    int totalNoOfBridges = 0;
                    int totalNoOfCulverts = 0;
                }
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Section.District.DistrictName)
                        </td>
                        <td>
                           @Html.DisplayFor(modelItem => item.Section.SectionName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.RevisedRoadId)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.RevisedRoadId)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.SegmentName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Length)
                            @{
                                totalRoadLength += (item.Length == null) ? 0.0 : (double)item.Length;
                            }
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Bridges.Count)
                            @{
                                totalNoOfBridges += item.Bridges.Count;
                            }
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Culverts.Count)
                            @{
                                totalNoOfCulverts += item.Culverts.Count;
                            }
                        </td> 
                        <td align="center">
                            <!-- with Tooltips -->
                            <a href="@Url.Action("_GetRoadMap", "RoadMap", new { id = item.SegmentId })" style="font-size: large" target="_blank" class="glyphicon glyphicon-map-marker" data-toggle="tooltip" title="Go to Road Segment Map"></a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="panel-footer">
        <h3 class="panel-title">Total No. of Road Segments: <b>@Model.Count()</b> | Total Road Length: <b>@totalRoadLength.ToString("#,0.0") km</b></h3>
        <h3 class="panel-title">Total No. of Bridges: <b>@totalNoOfBridges.ToString("#,0")</b> | Total No. of Culverts: <b>@totalNoOfCulverts.ToString("#,0")</b></h3>
    </div>
</div>

<script>
    $(document).ready(function () {
        $('#tblSegments').DataTable({
            paging: true,
            pageLength: 15,
            bLengthChange: true,
            scrollY: 400,
            scrollX: true,
            searching: true,
            select: true,
            dom: 'lBfrtip',
            //order: [[2, "asc"]], // order by Road Segment No (the 2nd column)
            order: [[0, "asc"], [1, "asc"], [2, "asc"]], // order first by District No (the 1st column), then by Section No (the 2nd column) and finally by Segment No (the 3rd column)
            buttons: [
                { extend: 'copy', className: 'btn btn-sm btn-primary' },
                { extend: 'excel', className: 'btn btn-sm btn-primary', text: 'Export Excel' },
                { extend: 'pdf', className: 'btn btn-sm btn-primary', text: 'Export PDF' },
                { extend: 'print', className: 'btn btn-sm btn-primary' }
            ]
        });
    });
</script>
