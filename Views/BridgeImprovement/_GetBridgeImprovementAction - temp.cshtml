@model IEnumerable<ERA_BMS.Models.BridgeImprovement>

<div class="panel panel-primary">
    <div class="panel-heading">
        <h3 class="panel-title panel-info">Bridge Improvement Indicator in year <b>@ViewBag.ImprovementYear</b> for <b>@ViewBag.ImprovementType</b></h3>
    </div>

    <div class="panel-body">
        <table class="table table-striped table-condensed table-responsive display compact hover" id="tblbrgimprindicator">
            <thead>
                <tr>
                    <th>Item No</th>
                    <th>
                        @Html.DisplayNameFor(model => model.Bridge.Segment.Section.District.DistrictName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Bridge.Segment.Section.SectionName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Bridge.BridgeId)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Bridge.BridgeName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ImprovementType.ImprovementTypeName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ImprovementYear)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ImprovementCost)
                    </th>
                </tr>
            </thead>

            <tbody>
                @{  int itemNo = 0;
                    double totalCost = 0.0; }
                @foreach (var item in Model)
                {
                    <tr>
                        @{ itemNo++;}
                        <td>@itemNo</td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Bridge.Segment.Section.District.DistrictName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Bridge.Segment.Section.SectionName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Bridge.BridgeId)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Bridge.BridgeName)
                        </td>
                        @{
                            string bg = "";
                            string fore = "";
                            if (item.ImprovementType.ImprovementTypeId == 2)
                            {
                                bg = "red";
                                fore = "white";
                            }
                        }
                        <td style="background-color: @bg; color: @fore">
                            @Html.DisplayFor(modelItem => item.ImprovementType.ImprovementTypeId) - 
                            @Html.DisplayFor(modelItem => item.ImprovementType.ImprovementTypeName)
                        </td>
                        <td>
                            @item.ImprovementYear
                        </td>
                        <td>
                            @item.ImprovementCost.Value.ToString("#,0.00")
                            @{ totalCost += (double)@item.ImprovementCost;}
                        </td>
                        
                    </tr>
                }
                <tr>
                    <td colspan="6"></td>
                    <td><b>@totalCost.ToString("#,0.00")</b></td>
                </tr>
            </tbody>
        </table>
    </div>
    <div class="panel-footer">
        <h3 class="panel-title">Total No. of @ViewBag.ImprovementType works between @ViewBag.StartYear and @ViewBag.EndYear: <strong>@Model.Count()</strong></h3>
    </div>
</div>

<script>
    $(document).ready(function () {
        $('#tblbrgimprindicator').dataTable({
            paging: true,
            pageLength: 15,
            bLengthChange: true,
            scrollY: 400,
            searching: true,
            select: true,
            dom: 'lBfrtip',
            //buttons: ['copy', 'excel', 'pdf', 'print']
            buttons: [
                { extend: 'copy', className: 'btn btn-sm btn-primary' },
                { extend: 'excel', className: 'btn btn-sm btn-primary', text: 'Export Excel' },
                { extend: 'pdf', className: 'btn btn-sm btn-primary', text: 'Export PDF' },
                { extend: 'print', className: 'btn btn-sm btn-primary' }
            ]
        });
    });
</script>


