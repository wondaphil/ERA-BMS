@model IEnumerable<ERA_BMS.ViewModels.BridgeCulvertDistrictSectionSegmentViewModel>

@{
    ViewBag.Title = "Estimated Repair Cost of Bridges & Culverts by District";
}

<h2>Estimated Repair Cost of Bridges & Culverts by District</h2>

<hr />
<div class="panel panel-primary">
    <div class="panel-heading">
        <h3 class="panel-title panel-info">Estimated Repair Cost of Bridges and Culverts by <b>District</b></h3>
    </div>

    <div class="panel-body">
        <table class="table table-striped table-condensed table-responsive table-bordered display compact hover" id="bridgescountbydistrict">
            <thead>
                <tr>
                    <th>District Name</th>
                    <th>No. of Inspected Bridges</th>
                    <th>Est. Bridges Repair Cost, ETB</th>
                    <th>No. of Inspected Culverts</th>
                    <th>Est. Culverts Repair Cost, ETB</th>
                    <th>Total Est. Repair Cost, ETB</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.OrderBy(s => s.Districts.DistrictNo))
                {
                    <tr>
                        <td>@item.Districts.DistrictName</td>
                        <td>@item.BridgeCount</td>
                        <td>@item.BridgeImprovementCost.ToString("#,0.00")</td>
                        <td>@item.CulvertCount</td>
                        <td>@item.CulvertImprovementCost.ToString("#,0.00")</td>
                        @{
                            double sum = item.BridgeImprovementCost + item.CulvertImprovementCost;
                        }
                        <td>@sum.ToString("#,0.00")</td>
                    </tr>
                }
                
                @{
                    double totImprovCost = @Model.Sum(b => b.BridgeImprovementCost) + @Model.Sum(c => c.CulvertImprovementCost);
                }
                @*<tr>
                    <td></td>
                    <td><b>@Model.Sum(b => b.BridgeCount).ToString("#,0")</b></td>
                    <td><b>@Model.Sum(b => b.BridgeImprovementCost).ToString("#,0.00")</b></td>
                    <td><b>@Model.Sum(b => b.CulvertCount).ToString("#,0")</b></td>
                    <td><b>@Model.Sum(c => c.CulvertImprovementCost).ToString("#,0.00")</b></td>
                    <td><b>@totImprovCost.ToString("#,0.00")</b></td>
                </tr>*@
            </tbody>
        </table>
    </div>
    <div class="panel-footer">
        <h3 class="panel-title">
            No. of Districts: <b>@Model.Count()</b> | Total Est. Repair Cost Cost: <b>@totImprovCost.ToString("#,0.00")</b> <br />
            No. of Inspected Bridges: <b>@Model.Sum(b => b.BridgeCount).ToString("#,0")</b> | Total Est. Bridges Repair Cost Cost: <b>@Model.Sum(b => b.BridgeImprovementCost).ToString("#,0.00")</b> <br />
            No. of Inspected Culverts: <b>@Model.Sum(b => b.CulvertCount).ToString("#,0")</b> | Total Est. Culverts Repair Cost: <b>@Model.Sum(c => c.CulvertImprovementCost).ToString("#,0.00")</b>
        </h3>
    </div>
</div>

<script>
    $(document).ready(function () {
        $('#bridgescountbydistrict').dataTable({
            paging: false,
            pageLength: 15,
            bLengthChange: true,
            scrollY: 400,

            searching: true,
            select: true,
            dom: 'lBfrtip',
            //buttons: ['copy', 'excel', 'pdf', 'print']
            buttons: [
                { extend: 'copy', className: 'btn btn-sm btn-primary' },
                { extend: 'excel', className: 'btn btn-sm btn-primary', text: 'Export Excel' },
                { extend: 'pdf', className: 'btn btn-sm btn-primary', text: 'Export PDF' },
                { extend: 'print', className: 'btn btn-sm btn-primary' }
            ]
        }).columnFilter({
            "aoColumns": [
                { "type": "number-range" },
                { "type": "text" },
                { "type": "select" },
                { "type": "date-range" }
            ]
        });
    });
</script>


