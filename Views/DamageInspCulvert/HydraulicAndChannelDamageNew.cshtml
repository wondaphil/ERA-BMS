@model ERA_BMS.Models.culDamageInspHydraulic

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "hydrDmgForm" }))
{
    <hr />
    <h5 align="center" class="text-danger"><b>Hydraulic and Channel Damage data is empty for this culvert. Please enter data and save.</b></h5>
    <hr />
    <input type="hidden" id="culvertId" value="@TempData["CulvertId"]" />
    <input type="hidden" id="inspectiondate" value="@TempData["InspectionDate"]" />

    <div class="form-horizontal">
        <div class="row">
            <div class="col-lg-4 col-md-4 col-sm-4 col-xs-6">
                <div class="form-group form-group-sm">
                    <label for="ddlOverTopping" class="control-label col-lg-6 col-md-6">Overtopping</label>
                    <div class="col-lg-6 col-md-6">
                        @*@Html.DropDownList("ddlOverTopping", (SelectList)TempData["OverTopping"], new { @class = "form-control" })*@
                        @*@Html.DropDownList("ddlOverTopping", new SelectList((List<SelectListItem>)TempData["OverTopping"], "Value", "Text", Model.OverTopping), htmlAttributes: new { @class = "form-control" })*@
                        @Html.DropDownList("ddlOverTopping", (List<SelectListItem>)TempData["OverTopping"], htmlAttributes: new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group form-group-sm">
                    <label for="ddlConstriction" class="control-label col-lg-6 col-md-6">Constriction</label>
                    <div class="col-lg-6 col-md-6">
                        @*@Html.DropDownList("ddlConstriction", (SelectList)TempData["Constriction"], new { @class = "form-control" }*@
                        @*@Html.DropDownList("ddlConstriction", new SelectList((List<SelectListItem>)TempData["Constriction"], "Value", "Text", Model.Constriction), htmlAttributes: new { @class = "form-control" })*@
                        @Html.DropDownList("ddlConstriction", (List<SelectListItem>)TempData["Constriction"], htmlAttributes: new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group form-group-sm">
                    <label for="ddlEmbankmentScour" class="control-label col-lg-6 col-md-6">Embankment Scour</label>
                    <div class="col-lg-6 col-md-6">
                        @*@Html.DropDownList("ddlEmbankmentScour", (SelectList)TempData["EmbankmentScour"], new { @class = "form-control" })*@
                        @*@Html.DropDownList("ddlEmbankmentScour", new SelectList((List<SelectListItem>)TempData["EmbankmentScour"], "Value", "Text", Model.EmbankmentScour), htmlAttributes: new { @class = "form-control" })*@
                        @Html.DropDownList("ddlEmbankmentScour", (List<SelectListItem>)TempData["EmbankmentScour"], htmlAttributes: new { @class = "form-control" })
                    </div>
                </div>
            </div>

            <div class="col-lg-4 col-md-4 col-sm-4 col-xs-6">
                <div class="form-group form-group-sm">
                    <label for="ddlChannelScour" class="control-label col-lg-6 col-md-6">Channel Scour</label>
                    <div class="col-lg-6 col-md-6">
                        @*@Html.DropDownList("ddlChannelScour", (SelectList)TempData["ChannelScour"], new { @class = "form-control" })*@
                        @*@Html.DropDownList("ddlChannelScour", new SelectList((List<SelectListItem>)TempData["ChannelScour"], "Value", "Text", Model.ChannelScour), htmlAttributes: new { @class = "form-control" })*@
                        @Html.DropDownList("ddlChannelScour", (List<SelectListItem>)TempData["ChannelScour"], htmlAttributes: new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group form-group-sm">
                    <label for="ddlChannelObstruction" class="control-label col-lg-6 col-md-6">Channel Obstruction</label>
                    <div class="col-lg-6 col-md-6">
                        @*@Html.DropDownList("ddlChannelObstruction", (SelectList)TempData["ChannelObstruction"], new { @class = "form-control" })*@
                        @*@Html.DropDownList("ddlChannelObstruction", new SelectList((List<SelectListItem>)TempData["ChannelObstruction"], "Value", "Text", Model.ChannelObstruction), htmlAttributes: new { @class = "form-control" })*@
                        @Html.DropDownList("ddlChannelObstruction", (List<SelectListItem>)TempData["ChannelObstruction"], htmlAttributes: new { @class = "form-control" })
                    </div>
                </div>
            </div>

            <div class="col-lg-4 col-md-4 col-sm-4 col-xs-6">
                <div class="form-group form-group-sm">
                    <label for="ddlSiltation" class="control-label col-lg-6 col-md-6">Siltation</label>
                    <div class="col-lg-6 col-md-6">
                        @*@Html.DropDownList("ddlSiltation", (SelectList)TempData["Siltation"], new { @class = "form-control" })*@
                        @*@Html.DropDownList("ddlSiltation", new SelectList((List<SelectListItem>)TempData["Siltation"], "Value", "Text", Model.Siltation), htmlAttributes: new { @class = "form-control" })*@
                        @Html.DropDownList("ddlSiltation", (List<SelectListItem>)TempData["Siltation"], htmlAttributes: new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group form-group-sm">
                    <label for="ddlVegitation" class="control-label col-lg-6 col-md-6">Vegitation</label>
                    <div class="col-lg-6 col-md-6">
                        @*@Html.DropDownList("ddlVegitation", (SelectList)TempData["Vegitation"], new { @class = "form-control" })*@
                        @*@Html.DropDownList("ddlVegitation", new SelectList((List<SelectListItem>)TempData["Vegitation"], "Value", "Text", Model.Vegitation), htmlAttributes: new { @class = "form-control" })*@
                        @Html.DropDownList("ddlVegitation", (List<SelectListItem>)TempData["Vegitation"], htmlAttributes: new { @class = "form-control" })
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="form-group form-group-sm">
                <div class="col-md-offset-2 col-md-5">
                    <button type="button" id="saveHydrDmg" class="btn btn-primary"><span class="glyphicon glyphicon-save"></span> Save</button>
                    <button type="reset" id="resetHydrDmg" class="btn btn-primary"><span class="glyphicon glyphicon-refresh"></span> Reset</button>
                    <div id="statusHydrDmg" class="success">
                        <!-- Save success or failure status text appears here-->
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<script>
    $(document).ready(function () {
        function ValidateDataEntry(hydrdmg) {
            if (hydrdmg.OverTopping == -1 || hydrdmg.Constriction == -1 || hydrdmg.EmbankmentScour == -1 ||
                hydrdmg.ChannelScour == -1 || hydrdmg.ChannelObstruction == -1 || hydrdmg.Siltation == -1 || hydrdmg.Vegitation == -1)
                return false;

            return true;
        }

        $('#saveHydrDmg').on('click', function () {
            var hydrdmg = {};
            hydrdmg.CulvertId = $('#culvertId').val();
            hydrdmg.OverTopping = $('#ddlOverTopping').val();
            hydrdmg.Constriction = $('#ddlConstriction').val();
            hydrdmg.EmbankmentScour = $('#ddlEmbankmentScour').val();
            hydrdmg.ChannelScour = $('#ddlChannelScour').val();
            hydrdmg.ChannelObstruction = $('#ddlChannelObstruction').val();
            hydrdmg.Siltation = $('#ddlSiltation').val();
            hydrdmg.Vegitation = $('#ddlVegitation').val();
            hydrdmg.InspectionDate = $('#inspectiondate').val();

            //alert(JSON.stringify(hydrdmg));

            if (ValidateDataEntry(hydrdmg)) {
                $.ajax({
                type: 'POST',
                cache: false,
                url: '@Url.Action("HydraulicAndChannelDamageNew", "DamageInspCulvert")',
                data: '{hydrDamage:' + JSON.stringify(hydrdmg) + '}',
                contentType: 'application/json; charset=utf-8',
                dataType: 'html', //'json',
                success: function (data) {
                    //alert("Data is saved succ");
                    //$('#statusHydrDmg').text("Data is saved successfully");
                },
                error: function (xhr) {
                    //alert(xhr.status);
                    //$('#statusHydrDmg').text(xhr.status);
                }
                });
                if ($('#statusHydrDmg').hasClass("text-danger"))
                    $('#statusHydrDmg').removeClass("text-danger");
                $('#statusHydrDmg').addClass("text-success");
                $('#statusHydrDmg').text("Data is saved successfully");
            }
            else {
                if ($('#statusHydrDmg').hasClass("text-success"))
                    $('#statusHydrDmg').removeClass("text-success");
                $('#statusHydrDmg').addClass("text-danger");
                $('#statusHydrDmg').text("* Please select all options");
            }
        });

        $('#resetHydrDmg').on('click', function () {
            $('#hydrDmgForm').trigger("reset"); // triger the normal reset function
        });
    });
</script>