@model ERA_BMS.Models.Ancillary

@{
    ViewBag.Title = "Ancillaries Inventory";
}

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "ancillaryForm" }))
{
    <hr />
    <h5 align="center" class="text-danger"><b>Ancillaries data is empty for this bridge. Please enter data and save.</b></h5>
    <hr />
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*@Html.HiddenFor(model => model.BridgeId)*@
        <input type="hidden" id="BridgeId" value="@TempData["BridgeId"]" />

        <div class="row">
            <div class="col-lg-4 col-md-4 col-sm-4 col-xs-4">
                <div class="form-group form-group-sm">
                    @Html.LabelFor(model => model.ExpansionJointTypeId, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-6">
                        @*@Html.DropDownList("ExpansionJointTypeId", null, "", htmlAttributes: new { @class = "form-control" })*@
                        @Html.DropDownList("ExpansionJointTypeId", (List<SelectListItem>)TempData["ExpansionJointTypeId"], htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ExpansionJointTypeId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group form-group-sm">
                    @Html.LabelFor(model => model.GuardRailingTypeId, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-6">
                        @*@Html.DropDownList("GuardRailingTypeId", null, "", htmlAttributes: new { @class = "form-control" })*@
                        @Html.DropDownList("GuardRailingTypeId", (List<SelectListItem>)TempData["GuardRailingTypeId"], htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.GuardRailingTypeId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-lg-4 col-md-4 col-sm-4 col-xs-4">
                <div class="form-group form-group-sm">
                    @Html.LabelFor(model => model.SurfaceTypeId, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-6">
                        @*@Html.DropDownList("SurfaceTypeId", null, "", htmlAttributes: new { @class = "form-control" })*@
                        @Html.DropDownList("SurfaceTypeId", (List<SelectListItem>)TempData["SurfaceTypeId"], htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SurfaceTypeId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-lg-4 col-md-4 col-sm-4 col-xs-4">
                <div class="form-group form-group-sm">
                    @Html.LabelFor(model => model.PiersBearingTypeId, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-6">
                        @*@Html.DropDownList("PiersBearingTypeId", null, "", htmlAttributes: new { @class = "form-control" })*@
                        @Html.DropDownList("PiersBearingTypeId", (List<SelectListItem>)TempData["PiersBearingTypeId"], htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PiersBearingTypeId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group form-group-sm">
                    @Html.LabelFor(model => model.AbutmentBearingTypeId, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-6">
                        @*@Html.DropDownList("AbutmentBearingTypeId", null, "", htmlAttributes: new { @class = "form-control" })*@
                        @Html.DropDownList("AbutmentBearingTypeId", (List<SelectListItem>)TempData["AbutmentBearingTypeId"], htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.AbutmentBearingTypeId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class=" form-group form-group-sm">
            <div class="col-md-offset-2 col-md-6">
                <button type="button" id="saveAncillary" class="btn btn-primary"><span class="glyphicon glyphicon-save"></span> Save</button>
                <button type="reset" id="resetAncillary" class="btn btn-primary"><span class="glyphicon glyphicon-refresh"></span> Reset</button>
                <div id="statusAncillary" class="success">
                    <!-- Save success or failure status text appears here-->
                </div>
            </div>
        </div>
    </div>
}

<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script>
    $(document).ready(function () {
        $('#saveAncillary').on('click', function () {
            var ancillary = {};

            ancillary.BridgeId = $('#BridgeId').val();
            ancillary.ExpansionJointTypeId = $('#ExpansionJointTypeId').val();
            ancillary.GuardRailingTypeId = $('#GuardRailingTypeId').val();
            ancillary.AbutmentBearingTypeId = $('#AbutmentBearingTypeId').val();
            ancillary.PiersBearingTypeId = $('#PiersBearingTypeId').val();
            ancillary.SurfaceTypeId = $('#SurfaceTypeId').val();

            //alert(JSON.stringify(ancillary));

            $.ajax({
                type: 'POST',
                cache: false,
                url: '@Url.Action("AncillaryNew", "BridgeInventory")',
                data: '{ancillary:' + JSON.stringify(ancillary) + '}',
                contentType: 'application/json; charset=utf-8',
                dataType: 'html',
                success: function (data) {
                    if ($('#statusAncillary').hasClass("text-danger"))
                        $('#statusAncillary').removeClass("text-danger");
                    $('#statusAncillary').addClass("text-success");
                    $('#statusAncillary').text("Data is saved successfully");
                },
                error: function (xhr) {
                    if ($('#statusAncillary').hasClass("text-success"))
                        $('#statusAncillary').removeClass("text-success");
                    $('#statusAncillary').addClass("text-danger");
                    $('#statusAncillary').text("Data is NOT saved!!");
                }
            });
        });

        $('#resetAncillary').on('click', function () {
            $('#ancillaryForm').trigger("reset"); // triger the normal reset function
        });
    });
</script>

