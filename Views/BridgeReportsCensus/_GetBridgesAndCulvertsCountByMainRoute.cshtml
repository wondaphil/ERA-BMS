@model IEnumerable<ERA_BMS.ViewModels.BridgeCulvertMainRouteSubRouteViewModel>

<hr />
<div class="panel panel-primary">
    <div class="panel-heading">
        <h3 class="panel-title panel-info">Bridges and Culverts Count By <b>Main Route</b></h3>
    </div>

    <div class="panel-body">
        <table class="table table-striped table-condensed table-responsive table-bordered display compact hover" id="bridgescountbymainroute">
            <thead>
                <tr>
                    <th>Main Route No</th>
                    <th>Main Route Name</th>
                    <th>No. of Bridges</th>
                    <th>No. of Culverts</th>
                </tr>
            </thead>
            <tbody>
                @{ int totalBridges = 0;
                    int totalCulverts = 0;
                }
                @foreach (var item in Model)
                {
                <tr>
                    <td>@item.MainRoutes.MainRouteNo</td>
                    <td>@item.MainRoutes.MainRouteName</td>
                    <td>@( item.BridgeCount == null ? 0 : item.BridgeCount )</td> @*If there is no bridge (bridgeCount == null), then put 0*@
                    <td>@( item.CulvertCount == null ? 0 : item.CulvertCount )</td> @*If there is no bridge (culvertCount == null), then put 0*@
                </tr>
                    // To avoid the exception "Nullable values must have a value", put 0 if it is null    
                    totalBridges += (int) (item.BridgeCount == null ? 0 : item.BridgeCount);
                    totalCulverts += (int) (item.CulvertCount == null ? 0 : item.CulvertCount);
                }
            </tbody>
        </table>
    </div>
    
    <div class="panel-footer">
        <h3 class="panel-title">No. of Main Routes: <b>@Model.Count()</b> | Total Bridges: <b>@totalBridges</b> | Total Culverts: <b>@totalCulverts</b></h3>
    </div>
</div>

<script>
    $(document).ready(function () {
        $('#bridgescountbymainroute').dataTable({
            paging: true,
            pageLength: 15,
            bLengthChange: true,
            scrollY: 400,
            
            searching: true,
            select: true,
            dom: 'lBfrtip',
            //buttons: ['copy', 'excel', 'pdf', 'print']
            buttons: [
                { extend: 'copy', className: 'btn btn-sm btn-primary' },
                { extend: 'excel', className: 'btn btn-sm btn-primary', text: 'Export Excel' },
                { extend: 'pdf', className: 'btn btn-sm btn-primary', text: 'Export PDF' },
                { extend: 'print', className: 'btn btn-sm btn-primary' }
            ]
        }).columnFilter({
            "aoColumns": [
                { "type": "number-range" },
                { "type": "text" },
                { "type": "select" },
                { "type": "date-range" }
            ]
        });
    });
</script>




