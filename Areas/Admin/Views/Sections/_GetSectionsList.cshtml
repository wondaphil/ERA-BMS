@model IEnumerable<ERA_BMS.Models.Section>

<div class="panel panel-primary">
    <div class="panel-heading">
        <h3 class="panel-title panel-info">List of Sections</h3>
    </div>
    <div class="panel-body">
        <table class="table table-striped table-condensed table-responsive table-bordered display compact hover" id="sections">
            <thead>
                <tr>
                    @*<th>
                        @Html.DisplayNameFor(model => model.SectionId)
                    </th>*@
                    <th>
                        @Html.DisplayNameFor(model => model.SectionNo)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.SectionName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Remark)
                    </th>
                    <th></th>
                    <th></th>
                </tr>
            </thead>

            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            <span class="SectionNo" name="@item.SectionId">@item.SectionNo</span>
                        </td>
                        <td>
                            <span class="SectionName" name="@item.SectionId">@item.SectionName</span>
                        </td>
                        <td>
                            <span> @item.Remark </span>
                        </td>
                        <td align="center">
                            <!-- with Tooltips -->
                            @Html.ActionLink(" ", "Edit", new { area = "Admin", id = item.SectionId }, new { @class = "glyphicon glyphicon-edit", @data_toggle = "tooltip", title = "Edit" })
                        </td>
                        <td align="center">
                            @Html.ActionLink(" ", "Delete", new { area = "Admin", id = item.SectionId }, new { @class = "glyphicon glyphicon-trash", @data_toggle = "tooltip", title = "Delete" })
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="panel-footer">
        <h3 class="panel-title">Total No. of Sections: <b>@Model.Count()</b></h3>
    </div>
</div>

<script>
    $(document).ready(function () {
        makeSectionNoEditable();
        makeSectionNameEditable();

        $('#sections').DataTable({
            //paging: false,
            //pageLength: 15,
            bLengthChange: true,
            //scrollY: 400,
            
            searching: true,
            select: true,
            dom: 'lBfrtip',
            //order: [[1, "asc"]], // order by Section No (the 2nd column)
            buttons: [
                { extend: 'copy', className: 'btn btn-sm btn-primary' },
                { extend: 'excel', className: 'btn btn-sm btn-primary', text: 'Export Excel' },
                { extend: 'pdf', className: 'btn btn-sm btn-primary', text: 'Export PDF' },
                { extend: 'print', className: 'btn btn-sm btn-primary' }
            ]
        });

        // A function that makes "SectionNo" editable
        function makeSectionNoEditable() {
            $(".SectionNo").each(function () {
                $(this).editable("/Sections/UpdateSectionNo", {
                    callback: function (value, settings) {
                        $(this).html(jQuery.parseJSON(settings.data)[value]);
                    },
                    submitdata: function () {
                        return {
                            // Pass parameters to "UpdateSectionNo" action in "Sections" controller action
                            id: $(this).attr("name"),
                            origvalue: this.revert,
                        };
                    },
                    tooltip: 'Click or Tap to edit...',
                    indicator: 'Saving...',
                    select: true, // highlight all text after editable
                    size: 30
                });
            });
        }

        // A function that makes "SectionName" editable
        function makeSectionNameEditable() {
            $(".SectionName").each(function () {
                $(this).editable("/Sections/UpdateSectionName", {
                    callback: function (value, settings) {
                        $(this).html(jQuery.parseJSON(settings.data)[value]);
                    },
                    submitdata: function () {
                        return {
                            // Pass parameters to "UpdateSectionName" action in "Sections" controller action
                            id: $(this).attr("name"),
                            origvalue: this.revert,
                        };
                    },
                    tooltip: 'Click or Tap to edit...',
                    indicator: 'Saving...',
                    select: true, // highlight all text after editable
                    size: 30
                });
            });
        }
    });
</script>
