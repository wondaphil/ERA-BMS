@model ERA_BMS.Models.Segment

@{
    ViewBag.Title = "Edit Road Segment";
}

<h2>Edit Road Segment</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*@Html.HiddenFor(model => model.SegmentId)*@

        <div class="row">
            <div class="col-xs-6">
                <div class="form-group form-group-sm">
                    @Html.LabelFor(model => model.SegmentId, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.SegmentId, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.SegmentId, "You cannot modify this value", new { style = "color: red" })
                    </div>
                </div>

                <div class="form-group form-group-sm required">
                    @Html.LabelFor(model => model.SegmentNo, htmlAttributes: new { @class = "control-label col-md-5", @style = "color: red; " })
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.SegmentNo, new { htmlAttributes = new { @class = "form-control", @style = "border: 2px solid red; " } })
                        @Html.ValidationMessageFor(model => model.SegmentNo, "** Be careful when changing this value!", new { style = "color: red" })
                    </div>
                </div>

                <div class="form-group form-group-sm">
                    @Html.LabelFor(model => model.RoadId, htmlAttributes: new { @class = "control-label col-md-5", @style = "color: red; " })
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.RoadId, new { htmlAttributes = new { @class = "form-control", @style = "border: 2px solid red; " } })
                        @Html.ValidationMessageFor(model => model.RoadId, "** Be careful when changing this value!", new { style = "color: red" })
                    </div>
                </div>

                <div class="form-group form-group-sm">
                    @Html.LabelFor(model => model.RevisedRoadId, htmlAttributes: new { @class = "control-label col-md-5", @style = "color: red; " })
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.RevisedRoadId, new { htmlAttributes = new { @class = "form-control", @style = "border: 2px solid red; " } })
                        @Html.ValidationMessageFor(model => model.RevisedRoadId, "** Be careful when changing this value!", new { style = "color: red" })
                    </div>
                </div>

                <div class="form-group form-group-sm required">
                    @Html.LabelFor(model => model.SegmentName, htmlAttributes: new { @class = "control-label col-sm-5" })
                    <div class="col-sm-7">
                        @Html.EditorFor(model => model.SegmentName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SegmentName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group form-group-sm required">
                    <label for="DistrictId" class="control-label col-md-5">District</label>
                    <div class="col-md-7">
                        @*@Html.DropDownList("DistrictId", ViewBag.Districts as SelectList, htmlAttributes: new { @class = "form-control" })*@
                        @Html.DropDownList("DistrictId", new SelectList(ViewBag.Districts, "Value", "Text", ViewBag.DistrictId), new { @class = "form-control" })
                        @*@Html.ValidationMessageFor("District", "", new { @class = "text-danger" })*@
                    </div>
                </div>

                <div class="form-group form-group-sm required">
                    @Html.LabelFor(model => model.SectionId, "Section", htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-7">
                        @Html.DropDownList("SectionId", new SelectList(ViewBag.Sections, "Value", "Text", ViewBag.SectionId), htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SectionId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group form-group-sm">
                    @Html.LabelFor(model => model.ConstructionYear, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.ConstructionYear, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ConstructionYear, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-xs-6">
                <div class="form-group form-group-sm">
                    @Html.LabelFor(model => model.AsphaltLength, htmlAttributes: new { @class = "control-label col-sm-4" })
                    <div class="col-sm-8">
                        @Html.EditorFor(model => model.AsphaltLength, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AsphaltLength, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group form-group-sm">
                    @Html.LabelFor(model => model.GravelLength, htmlAttributes: new { @class = "control-label col-sm-4" })
                    <div class="col-sm-8">
                        @Html.EditorFor(model => model.GravelLength, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.GravelLength, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group form-group-sm">
                    @Html.LabelFor(model => model.Length, htmlAttributes: new { @class = "control-label col-sm-4" })
                    <div class="col-sm-8">
                        @Html.EditorFor(model => model.Length, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Length, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group form-group-sm">
                    @Html.LabelFor(model => model.Width, htmlAttributes: new { @class = "control-label col-sm-4" })
                    <div class="col-sm-8">
                        @Html.EditorFor(model => model.Width, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Width, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group form-group-sm">
                    @Html.LabelFor(model => model.RoadClassId, htmlAttributes: new { @class = "control-label col-sm-4" })
                    <div class="col-sm-8">
                        @Html.DropDownList("RoadClassId", new SelectList(ViewBag.RoadClasses, "Value", "Text", ViewBag.RoadClassId), htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.RoadClassId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group form-group-sm">
                    @Html.LabelFor(model => model.DesignStandardId, htmlAttributes: new { @class = "control-label col-sm-4" })
                    <div class="col-sm-8">
                        @Html.DropDownList("DesignStandardId", new SelectList(ViewBag.DesignStandards, "Value", "Text", ViewBag.DesignStandardId), htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.DesignStandardId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group form-group-sm">
                    @Html.LabelFor(model => model.RoadSurfaceTypeId, htmlAttributes: new { @class = "control-label col-sm-4" })
                    <div class="col-sm-8">
                        @Html.DropDownList("SurfaceTypeId", new SelectList(ViewBag.RoadSurfaceTypes, "Value", "Text", ViewBag.RoadSurfaceTypeId), htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.RoadSurfaceTypeId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group form-group-sm">
                    @Html.LabelFor(model => model.AverageDailyTraffic, htmlAttributes: new { @class = "control-label col-sm-4" })
                    <div class="col-sm-8">
                        @Html.EditorFor(model => model.AverageDailyTraffic, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AverageDailyTraffic, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group form-group-sm">
                    @Html.LabelFor(model => model.RegionalGovernmentId, htmlAttributes: new { @class = "control-label col-sm-4" })
                    <div class="col-sm-8">
                        @Html.DropDownList("RegionalGovernmentId", new SelectList(ViewBag.RegionalGovernments, "Value", "Text", ViewBag.RegionalGovernmentId), htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.RegionalGovernmentId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group form-group-sm">
                    @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "control-label col-sm-4" })
                    <div class="col-sm-8">
                        @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group form-group-sm">
                <div class="col-xs-offset-3 col-sm-10">
                    <button type="submit" class="btn btn-primary" id="save"><span class="glyphicon glyphicon-save"></span> Save</button>
                    <button type="reset" class="btn btn-primary"><span class="glyphicon glyphicon-refresh"></span> Reset</button>
                    <div id="status" class="text-danger">
                        <!-- Save failure status text appears here-->
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<div>
    <a href="@Url.Action("Index", new {area = "Admin", id = ViewBag.SectionId })" class="btn btn-primary"><span class="glyphicon glyphicon-backward"></span> Go to Segments List</a>
</div>

<script>
    $(document).ready(function () {
        $('#distrIdDIV').text("District No. = " + $('#DistrictId option:selected').val());
        $('#secIdDIV').text("Section No. = " + $('#SectionId option:selected').val());

        $('#DistrictId').change(function () {
            var selDistrictId = $('#DistrictId option:selected').val();
            $('#SectionId option').remove(); //empty the section dropdown list
            $('#secIdDIV').text(""); //clear section no. indicator
            if (selDistrictId == "0") //if no district is selected
            {
                $('#distrIdDIV').text(""); //clear district no. indicator
                $('#segmentsPartial').empty(); // clear the segments place holder
            }
            else {
                $('#distrIdDIV').text("District No. = " + selDistrictId);
                $('#segIdDIV').text(""); //empty the segment dropdown list

                $.ajax({
                    url: '@Url.Action("_GetSections", "LocationsDDL", new {area = ""})',
                    data: { districtid: selDistrictId },
                    type: 'GET',
                    dataType: 'json',
                    success: function (data) {
                        var markup = '<option value="0" id="noselect"> --Select Section --</option>';
                        $.each(data, function (i, section) {
                            markup += '<option value="' + section.Value + '">' + section.Text + '</option>'
                            $('#SectionId').html(markup);
                        });
                    }
                });
            }
        });

        $('#SectionId').change(function () {
            var selSectionId = $('#SectionId option:selected').val();
            if (selSectionId == "0") //if no section is selected
                $('#secIdDIV').text(""); //clear district no. indicator
            else
                $('#secIdDIV').text("Section No. = " + selSectionId);
        });

        $('#save').click(function () {
            var selSectionId = $('#SectionId').val();

            // if no section is selected, cancel submission and show error status
            if (selSectionId == 0 || (typeof selSectionId == 'undefined') || selSectionId == null) {
                $('#status').text("Please select all boxes marked with *");
                return false;
            }
        });
    });
</script>