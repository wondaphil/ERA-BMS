@model IEnumerable<ERA_BMS.Models.MainRoute>

@{
    ViewBag.Title = "MainRoutes";
}

<br />
@{
    string textColor = "text-success";
    if (ViewBag.StatusMessage.Contains("error"))
    {
        textColor = "text-danger";
    }
}

<p id="statusmessage" class="@textColor" style="font-size: 15px">@ViewBag.StatusMessage</p>

<div class="panel panel-primary">
    <div class="panel-heading">
        <h3 class="panel-title panel-info">List of Main Routes</h3>
    </div>

    <div class="panel-body">
        <table class="table table-striped table-condensed table-responsive display compact hover" id="tblmainroutes">
            <thead>
                <tr>
                    @*<th>
                            @Html.DisplayNameFor(model => model.MainRouteId)
                        </th>*@
                    <th>
                        @Html.DisplayNameFor(model => model.MainRouteNo)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.MainRouteName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Length)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Remark)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.RoadClass.RoadClassName)
                    </th>
                    <th>Delete</th>
                </tr>
            </thead>

            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        @*<td>
                                @Html.DisplayFor(modelItem => item.MainRouteId)
                            </td>*@
                        <td>
                            <span class="MainRouteNo" name="@item.MainRouteId">@item.MainRouteNo</span>
                        </td>
                        <td>
                            <span class="MainRouteName" name="@item.MainRouteId">@item.MainRouteName</span>
                        </td>
                        <td>
                            <span class="Length" name="@item.MainRouteId">@item.Length</span>
                        </td>
                        <td>
                            <span class="Remark" name="@item.MainRouteId">@item.Remark</span>
                        </td>
                        <td>
                            @*@Html.DisplayFor(modelItem => item.RoadClass.RoadClassName)*@
                            <span class="RoadClass" name="@item.MainRouteId">@item.RoadClass.RoadClassName</span>
                        </td>
                        <td>
                            <!-- with Tooltips -->
                            @Html.ActionLink(" ", "DeleteMainRoute", new { area = "Admin", id = item.MainRouteId }, new { @class = "glyphicon glyphicon-trash", @data_toggle = "tooltip", title = "Delete" })
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="panel-footer">
        <h3 class="panel-title">Total No. of Main Routes: <b>@Model.Count()</b></h3>
    </div>

</div>

<p>
    <a href="@Url.Action("NewMainRoute")" class="btn btn-primary"><span class="glyphicon glyphicon-plus"></span> Register New Main Route</a>
</p>

<script>
    $(document).ready(function () {
        makeMainRouteNoEditable();
        makeMainRouteNameEditable();
        makeLengthEditable();
        makeRemarkEditable();
        makeRoadClassEditable();

        $('#tblmainroutes').DataTable({
            paging: true,
            pageLength: 15,
            bLengthChange: true,
            scrollY: 400,
            
            searching: true,
            select: true,
            dom: 'lBfrtip',
            //order: [[1, "asc"]], // order by Main Route No (the 2nd column)
            buttons: [
                { extend: 'copy', className: 'btn btn-sm btn-primary' },
                { extend: 'excel', className: 'btn btn-sm btn-primary', text: 'Export Excel' },
                { extend: 'pdf', className: 'btn btn-sm btn-primary', text: 'Export PDF' },
                { extend: 'print', className: 'btn btn-sm btn-primary' }
            ]
        });

        function makeMainRouteNoEditable() {
            $(".MainRouteNo").each(function () {
                $(this).editable("/Admin/Routes/UpdateMainRouteNo", {
                    callback: function (value, settings) {
                        var obj = JSON.parse(value);
                        $(this).html(obj.value);
                        
                        var msg = obj.Message;
                        
                        $('#statusmessage').removeClass("text-success");
                        $('#statusmessage').removeClass("text-danger");
                        if (msg.toLowerCase().includes("error"))
                            $('#statusmessage').addClass("text-danger");
                        else
                            $('#statusmessage').addClass("text-success");
                        $('#statusmessage').text(obj.Message);
                    },
                    submitdata: function () {
                        return {
                            // Pass parameters to "UpdateMainRouteNo" action in "Routes" controller action
                            id: $(this).attr("name"),
                            origvalue: this.revert,
                        };
                    },
                    before: function () {
                        // clear the status message
                        $('#statusmessage').text("");
                    },
                    onerror: function (settings, original, xhr) {
                        //var response = $.secureEvalJSON(returned.responseText)
                        //alert(response.errorMsg);
                    },
                    tooltip: 'Click or Tap to edit...',
                    indicator: 'Saving...',
                    label: "** Be careful!",
                    cssclass: "redtextbox",
                    size: 10
                });
            });
        }

        function makeMainRouteNameEditable() {
            $(".MainRouteName").each(function () {
                $(this).editable("/Admin/Routes/UpdateMainRouteName", {
                    callback: function (value, settings) {
                        var obj = JSON.parse(value);
                        $(this).html(obj.value);

                        var msg = obj.Message;

                        $('#statusmessage').removeClass("text-success");
                        $('#statusmessage').removeClass("text-danger");
                        if (msg.toLowerCase().includes("error"))
                            $('#statusmessage').addClass("text-danger");
                        else
                            $('#statusmessage').addClass("text-success");
                        $('#statusmessage').text(obj.Message);
                    },
                    submitdata: function () {
                        return {
                            // Pass parameters to "UpdateMainRouteName" action in "Routes" controller action
                            id: $(this).attr("name"),
                            origvalue: this.revert,
                        };
                    },
                    before: function () {
                        // clear the status message
                        $('#statusmessage').text("");
                    },
                    tooltip: 'Click or Tap to edit...',
                    indicator: 'Saving...',
                    size: 30
                });
            });
        }

        function makeLengthEditable() {
            $(".Length").each(function () {
                $(this).editable("/Admin/Routes/UpdateMainRouteLength", {
                    callback: function (value, settings) {
                        var obj = JSON.parse(value);
                        $(this).html(obj.value);

                        var msg = obj.Message;

                        $('#statusmessage').removeClass("text-success");
                        $('#statusmessage').removeClass("text-danger");
                        if (msg.toLowerCase().includes("error"))
                            $('#statusmessage').addClass("text-danger");
                        else
                            $('#statusmessage').addClass("text-success");
                        $('#statusmessage').text(obj.Message);
                    },
                    submitdata: function () {
                        return {
                            // Pass parameters to "UpdateMainRouteLength" action in "Routes" controller action
                            id: $(this).attr("name"),
                            origvalue: this.revert,
                        };
                    },
                    before: function () {
                        // clear the status message
                        $('#statusmessage').text("");
                    },
                    placeholder: '-',
                    tooltip: 'Click or Tap to edit...',
                    indicator: 'Saving...',
                    size: 4
                });
            });
        }

        function makeRemarkEditable() {
            $(".Remark").each(function () {
                $(this).editable("/Admin/Routes/UpdateMainRouteRemark", {
                    callback: function (value, settings) {
                        var obj = JSON.parse(value);
                        $(this).html(obj.value);

                        var msg = obj.Message;

                        $('#statusmessage').removeClass("text-success");
                        $('#statusmessage').removeClass("text-danger");
                        if (msg.toLowerCase().includes("error"))
                            $('#statusmessage').addClass("text-danger");
                        else
                            $('#statusmessage').addClass("text-success");
                        $('#statusmessage').text(obj.Message);
                    },
                    submitdata: function () {
                        return {
                            // Pass parameters to "UpdateMainRouteRemark" action in "Routes" controller action
                            id: $(this).attr("name"),
                            origvalue: this.revert,
                        };
                    },
                    before: function () {
                        // clear the status message
                        $('#statusmessage').text("");
                    },
                    placeholder: '-',
                    tooltip: 'Click or Tap to edit...',
                    indicator: 'Saving...',
                    select: true, // highlight all text after editable
                    size: 30
                });
            });
        }

        function makeRoadClassEditable() {
            $(".RoadClass").each(function () {
                $(this).editable("/Admin/Routes/UpdateMainRouteRoadClass", {
                    type: "select", // drop down
                    loadurl: '/Admin/Routes/SelectRoadClass', // list all road classes
                    callback: function (value, settings) {
                        var obj = JSON.parse(value);
                        $(this).html(obj.value);

                        var msg = obj.Message;

                        $('#statusmessage').removeClass("text-success");
                        $('#statusmessage').removeClass("text-danger");
                        if (msg.toLowerCase().includes("error"))
                            $('#statusmessage').addClass("text-danger");
                        else
                            $('#statusmessage').addClass("text-success");
                        $('#statusmessage').text(obj.Message);
                    },
                    submitdata: function () {
                        return {
                            // Pass parameters to "UpdateMainRouteRoadClass" action in "Routes" controller action
                            id: $(this).attr("name"),
                            origvalue: this.revert,
                        };
                    },
                    before: function () {
                        // clear the status message
                        $('#statusmessage').text("");
                    },
                    tooltip: 'Click or Tap to edit...',
                    indicator: 'Saving...',
                    size: 30
                });
            });
        }
    });
</script>
