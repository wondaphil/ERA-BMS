@model IEnumerable<ERA_BMS.ViewModels.BridgeValueViewModel>

<hr />
<div class="panel panel-primary">
    <div class="panel-heading">
        <h3 class="panel-title panel-info">Bridge Current Value in Section <b>@ViewBag.Section</b> (District: <b>@ViewBag.District</b>)</h3>
    </div>

    <div class="panel-body">
        <table class="table table-striped table-condensed table-responsive display compact hover" id="bridges">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Bridge.RevisedBridgeNo)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Bridge.BridgeName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Bridge.SuperStructure.BridgeType.BridgeTypeName)
                    </th>
                    <th>
                        @*@Html.DisplayNameFor(model => model.Bridge.BridgeGeneralInfo.BridgeLength)*@
                        @Html.DisplayNameFor(model => model.Bridge.SuperStructure.TotalSpanLength)
                    </th>
                    <th>
                        @*@Html.DisplayNameFor(model => model.CurrentValue.ConstructionYear)*@
                        Constr. / Replaced Year
                    </th>
                    <th>
                        @*@Html.DisplayNameFor(model => model.CurrentValue.ConstructionCost)*@
                        Constr. Cost
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.CurrentValue.ReplacementCost)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.CurrentValue.ServiceYears)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.CurrentValue.LatestPriorityVal)
                    </th>
                    <th>
                        @*@Html.DisplayNameFor(model => model.CurrentValue.BridgeConditionIndex)*@
                        BCI
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.CurrentValue.DepreciatedReplacementCost)
                    </th>
                    <th>
                        @*@Html.DisplayNameFor(model => model.CurrentValue.TotalImprovementCost)*@
                        Tot. Improv. Cost
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.CurrentValue.CurrentValue)
                    </th>
                    <th>
                        Inven- tory
                    </th>
                </tr>
            </thead>

            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Bridge.RevisedBridgeNo)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Bridge.BridgeName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Bridge.SuperStructure.BridgeType.BridgeTypeName)
                        </td>
                        <td>
                            @*@Html.DisplayFor(modelItem => item.Bridge.BridgeGeneralInfo.BridgeLength)*@
                            @Html.DisplayFor(modelItem => item.Bridge.SuperStructure.TotalSpanLength)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CurrentValue.ConstructionYear)
                        </td>

                        @{
                            string constructionCost = (item.CurrentValue.ConstructionCost == null) ? "" : item.CurrentValue.ConstructionCost.Value.ToString("#,0.00");
                        }
                        <td>
                            @constructionCost
                        </td>
                        <td>
                            @item.CurrentValue.ReplacementCost.ToString("#,0.00")
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CurrentValue.ServiceYears)
                        </td>
                        <td>
                            @item.CurrentValue.LatestPriorityVal
                        </td>
                        <td>
                            @item.CurrentValue.BridgeConditionIndex
                        </td>

                        @{
                            string depreciatedCost = (item.CurrentValue.DepreciatedReplacementCost == null) ? "" : item.CurrentValue.DepreciatedReplacementCost.Value.ToString("#,0.00");
                        }
                        <td>
                            @depreciatedCost
                        </td>
                        <td>
                            @item.CurrentValue.TotalImprovementCost.ToString("#,0.00")
                        </td>

                        @{
                            string currentVal = (item.CurrentValue.CurrentValue == null) ? "" : item.CurrentValue.CurrentValue.Value.ToString("#,0.00");
                        }

                        <th>
                            @currentVal
                        </th>
                        <td align="center">
                            <a href="@Url.Action("Index", "BridgeInventory", new { id = item.Bridge.BridgeId, area = ""  })" target="_blank" class="glyphicon glyphicon-new-window" data-toggle="tooltip" title="Go to Innventory" style="font-size: 14px"></a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="panel-footer">
        <h3 class="panel-title">Total No. of Bridges: <b>@Model.Count().ToString("#,0")</b> | Total Bridge Asset Value: <b>@Model.Sum(b => b.CurrentValue.CurrentValue).Value.ToString("#,0.00")</b></h3>
    </div>
</div>

<script>
    $(document).ready(function () {
        $('#bridges').dataTable({
            paging: true,
            pageLength: 15,
            bLengthChange: true,
            scrollY: 400,
            scrollX: true,
            seaReplacementCosthing: true,
            select: true,
            dom: 'lBfrtip',
            //buttons: ['copy', 'excel', 'pdf', 'print']
            buttons: [
                { extend: 'copy', className: 'btn btn-sm btn-primary' },
                { extend: 'excel', className: 'btn btn-sm btn-primary', text: 'Export Excel' },
                { extend: 'pdf', className: 'btn btn-sm btn-primary', text: 'Export PDF' },
                { extend: 'print', className: 'btn btn-sm btn-primary' }
            ]
        });
    });
</script>
