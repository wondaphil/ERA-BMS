@model ERA_BMS.Models.ConstructionYear

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "NewConstructionYearForm", onsubmit = "return ValidateDataEntry()" }))
{
    <hr />
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="row">
            <h2 align="center">New Bridge Construction Year Range</h2>
            <hr />
            <div class="col-lg-5 col-sm-6 col-xs-10">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                @*Holds a unique Construction Year id*@
                @Html.HiddenFor(model => model.CategoryId)

                <div class="form-group form-group-sm required">
                    @Html.LabelFor(model => model.ConstructionYears, htmlAttributes: new { @class = "control-label col-sm-6 col-xs-4" })
                    <div class="col-sm-6 col-xs-6">
                        @Html.EditorFor(model => model.ConstructionYears, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ConstructionYears, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group form-group-sm required">
                    @Html.LabelFor(model => model.FromYear, htmlAttributes: new { @class = "control-label col-sm-6 col-xs-4" })
                    <div class="col-sm-6 col-xs-6">
                        @Html.EditorFor(model => model.FromYear, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FromYear, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group form-group-sm required">
                    @Html.LabelFor(model => model.ToYear, htmlAttributes: new { @class = "control-label col-sm-6 col-xs-4" })
                    <div class="col-sm-6 col-xs-6">
                        @Html.EditorFor(model => model.ToYear, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ToYear, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-lg-5 col-sm-6 col-xs-10">
                <div class="form-group form-group-sm">
                    @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "control-label col-sm-6 col-xs-4" })
                    <div class="col-sm-6 col-xs-6">
                        @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group form-group-sm">
            <div class="col-md-offset-3 col-xs-offset-1 col-md-8 col-xs-10 col-sm-12 col-xs-10">
                <div class="col-md-2 col-sm-2 col-xs-3">
                    <button type="submit" class="btn btn-primary"><span class="glyphicon glyphicon-save"></span> Save</button>
                </div>
                <div class="col-sm-2 col-xs-3">
                    <button type="reset" class="btn btn-primary"><span class="glyphicon glyphicon-refresh"></span> Reset</button>
                </div>
                <div class="col-sm-2 col-xs-3">
                    <button type="button" id="cancel" class="btn btn-primary"><span class="glyphicon glyphicon-backward"></span> Cancel</button>
                </div>
                <div class="col-sm-7 col-xs-10">
                    <div id="validationStatus" class="success">
                        <!-- Validation status text appears here-->
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<script type="text/javascript">
    $(document).ready(function () {
        // Assign a construction year range id which is the next sequence in the construction year table
        $.ajax({
            url: '@Url.Action("LastConstructionYearRangeId", "ConstructionYearRanges")',
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                $.each(data, function (i, item) {
                    $('#CategoryId').val(item.CategoryId); // set the construction year range id
                });
            },
        });

        function ValidateDataEntry() {
            if ($('#ConstructionYear').val() == "" || $('#FromYear').val() == "" || $('#ToYear').val() == "")
                return false;

            return true;
        }

        $('form').on('submit', function (e) {
            // validation code here
            if (!ValidateDataEntry()) {
                e.preventDefault();
                if ($('#validationStatus').hasClass("text-success"))
                    $('#validationStatus').removeClass("text-success");
                $('#validationStatus').addClass("text-danger");
                $('#validationStatus').text("Please enter all boxes marked with *");
            }
            else {
                if ($('#validationStatus').hasClass("text-danger"))
                    $('#validationStatus').removeClass("text-danger");
                $('#validationStatus').addClass("text-success");$('#validationStatus').text("Saving...");
            }

        });

        $("#cancel").on("click", function () {
            window.location.href = "/Admin/ConstructionYearRanges";
        });
    });
</script>